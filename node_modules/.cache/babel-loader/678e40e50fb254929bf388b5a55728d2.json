{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/react-proj/time/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DeletePopup from './DeletePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    task,\n    tasks,\n    setItems,\n    done,\n    setDone\n  } = _ref;\n  const [remove, setRemove] = useState(false);\n  let start = 0;\n  let interval = true;\n\n  const downHandler = () => {\n    interval = setInterval(() => {\n      if (start === 11) {\n        setRemove(true);\n        clearInterval(interval);\n        return;\n      }\n\n      console.log(start);\n      start += 1;\n    }, 100);\n  };\n\n  const upHandler = () => {\n    clearInterval(interval);\n\n    if (start <= 10) {\n      console.log({\n        done\n      });\n      setDone(done.map(item => {\n        if (item.id === task.id) return { ...item,\n          time: item.times + 1\n        };\n        return item;\n      })); // setDone([\n      //     ...done,\n      //     {text: task.text, id: task.id, times: 0}\n      // ])\n    }\n\n    start = 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: downHandler,\n    onMouseUp: upHandler,\n    className: \"task\",\n    children: [remove && /*#__PURE__*/_jsxDEV(DeletePopup, {\n      setItems: setItems,\n      tasks: tasks,\n      task: task,\n      setRemove: setRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"qxZ7hIiR/XywTeim4/5PeYNGxYA=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/mk/Desktop/react-proj/time/src/components/Task.js"],"names":["React","useState","DeletePopup","Task","task","tasks","setItems","done","setDone","remove","setRemove","start","interval","downHandler","setInterval","clearInterval","console","log","upHandler","map","item","id","time","times","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAAwC;AAAA;;AAAA,MAAvC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA,QAAZ;AAAqBC,IAAAA,IAArB;AAA0BC,IAAAA;AAA1B,GAAuC;AAGjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAGA,MAAIU,KAAK,GAAC,CAAV;AACA,MAAIC,QAAQ,GAAC,IAAb;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AACzB,UAAGH,KAAK,KAAG,EAAX,EAAc;AACVD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,QAAAA,aAAa,CAACH,QAAD,CAAb;AACA;AACH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAA,MAAAA,KAAK,IAAE,CAAP;AACH,KARqB,EAQnB,GARmB,CAAtB;AASH,GAVD;;AAYA,QAAMO,SAAS,GAAG,MAAM;AACpBH,IAAAA,aAAa,CAACH,QAAD,CAAb;;AAEA,QAAGD,KAAK,IAAE,EAAV,EAAa;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACV,QAAAA;AAAD,OAAZ;AACAC,MAAAA,OAAO,CAACD,IAAI,CAACY,GAAL,CAAUC,IAAD,IAAU;AACvB,YAAGA,IAAI,CAACC,EAAL,KAAYjB,IAAI,CAACiB,EAApB,EACI,OAAM,EACF,GAAGD,IADD;AACOE,UAAAA,IAAI,EAAEF,IAAI,CAACG,KAAL,GAAW;AADxB,SAAN;AAGJ,eAAOH,IAAP;AACH,OANO,CAAD,CAAP,CAFS,CAUT;AACA;AACA;AACA;AACH;;AAEDT,IAAAA,KAAK,GAAC,CAAN;AACH,GApBD;;AAsBA,sBAEI;AAAK,IAAA,WAAW,EAAEE,WAAlB;AAA+B,IAAA,SAAS,EAAEK,SAA1C;AAAqD,IAAA,SAAS,EAAC,MAA/D;AAAA,eACKT,MAAM,iBAAE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH,QAAvB;AAAiC,MAAA,KAAK,EAAED,KAAxC;AAA+C,MAAA,IAAI,EAAED,IAArD;AAA2D,MAAA,SAAS,EAAEM;AAAtE;AAAA;AAAA;AAAA;AAAA,YADb,eAEI;AAAA,gBAAIN,IAAI,CAACoB;AAAT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH,CAnDD;;GAAMrB,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react'\nimport DeletePopup from './DeletePopup'\n\nconst Task = ({task,tasks,setItems,done,setDone}) => {\n\n   \n    const [remove, setRemove] = useState(false); \n\n\n    let start=0;\n    let interval=true;\n\n    const downHandler = () => {\n        interval = setInterval(() => {\n            if(start===11){\n                setRemove(true);\n                clearInterval(interval);\n                return;\n            }\n            console.log(start);\n            start+=1;\n        }, 100);\n    }\n\n    const upHandler = () => {\n        clearInterval(interval);\n\n        if(start<=10){\n            console.log({done})\n            setDone(done.map((item) => {\n                if(item.id === task.id)\n                    return{\n                        ...item, time: item.times+1\n                    }\n                return item;\n            }))\n\n            // setDone([\n            //     ...done,\n            //     {text: task.text, id: task.id, times: 0}\n            // ])\n        }\n            \n        start=0;\n    }\n\n    return(\n        \n        <div onMouseDown={downHandler} onMouseUp={upHandler} className=\"task\">\n            {remove&&<DeletePopup setItems={setItems} tasks={tasks} task={task} setRemove={setRemove}/>}\n            <p>{task.text}</p>\n        </div>\n\n    )\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}